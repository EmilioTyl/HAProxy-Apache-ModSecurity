global
        log 127.0.0.1 local1 notice
        maxconn 2000
        user haproxy
        group haproxy

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        retries 3
        option redispatch
        timeout http-request 5s
        timeout connect  5s
        timeout client  10s
        timeout server  10s

listen stats
        bind 192.168.33.15:9000
        stats enable
        stats hide-version #Hide HAPRoxy version, a necessity for any public-facing site
        stats uri /haproxy_stats #The URI of the stats page, in this case localhost:9000/haproxy_stats
        stats realm HAProxy Statistics #Show this text in authentication popup (escape space characters with backslash)
        stats auth admin:admin  

frontend ft_waf
        bind 192.168.33.15:80
        log global

        #Create a table with one row per IPv4. 
        #Each row contains
        # - The number of current connection that each IPv4 currently has.
        # - Frecuency (open tcp connections / period) over a 3s period 
        # - Frecuency (http request/ period) over a 10s period 

        stick-table type ip size 1m expire 5m store conn_cur,conn_rate(3s)
        
        #Transport layer attacks mitigation. The protections is based on (number/opening rate) of TCP sockets
     
        #Limit number of connections per user 
        #A common user should use more than 10 conexions to load the site, this could vary depending the number of .img .js .css that the site has
        tcp-request connection reject if { src_conn_cur ge 10 } # If the current connections of a IPv4 is greater than 10, reject the new connection

        #Limit the connection rate per user
        #Reject the user if he opens more than 9 conections in 3 seconds
        tcp-request connection reject if { src_conn_rate ge 9 }

        #Increments the counter with the key src
        tcp-request connection track-sc1 src 

        default_backend bk_waf

backend bk_waf
        balance roundrobin
        mode http
        log global
        option httplog
        option forwardfor header X-Client-IP
        option httpchk HEAD /waf_health_check HTTP/1.0

        # Specific WAF checking: a DENY means everything is OK
        http-check expect status 403
        timeout server 25s
        default-server inter 3s rise 2 fall 3
        
        server waf1 192.168.33.18:81 maxconn 100 weight 10 check

frontend ft_web
        bind 192.168.33.15:81
        mode http
        log global
        option httplog
        timeout client 25s
        maxconn 1000
        default_backend bk_web

backend bk_web
        mode http
        log global
        balance roundrobin
        cookie SRVNAME insert
        server node1 192.168.33.16:80 cookie server-1 check
     